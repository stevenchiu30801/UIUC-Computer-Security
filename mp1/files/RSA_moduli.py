#!/usr/bin/python

# 512-bit random prime number
p1 = 12050921149391151677000784305061798652745500796390450618604716991519054140601546681645734228294459884328273306683811362405803181230295325578721314057001663
p2 = 3729702980907277812552195269484366715010603733998203678938954399156800709652165285669570262326848088880021680703258708391695068224905145568751669586082579

# 1024-bit MD5 bit string
b1 = int("54b20eff475aaea8b42edbe24ce88a1e54042659ac801709f939449a2682c7fbc7cb08f86e41f1c66be2de1cb1fb93790ef133d39ba59eca832de66d3cbfbb8d055484f8a38d5ea725e4e4b6a2404b7f3bc357b07cd971e74dc310bf9a5f68b7cfd528f497831d3e373c063b4154198ffa29e05cdf7ed3bcdccddaa810da7556", 16)
b2 = int("54b20eff475aaea8b42edbe24ce88a1e540426d9ac801709f939449a2682c7fbc7cb08f86e41f1c66be2de1cb17b94790ef133d39ba59eca832de6ed3cbfbb8d055484f8a38d5ea725e4e4b6a2404b7f3bc357307cd971e74dc310bf9a5f68b7cfd528f497831d3e373c063b41d4188ffa29e05cdf7ed3bcdccdda2810da7556", 16)

b0 = 0
while (b1 * pow(2, 1024) + b0) % p1 != 0 or (b2 * pow(2, 1024) + b0) % p2 != 0:
	b0 = b0 + 1
	if b0 > p1 * p2:
		break

print b0
